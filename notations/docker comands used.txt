#creating a docker container with postgres
docker run -it \
    -e POSTRGES_USER=postgres \
    -e POSTGRES_PASSWORD=postgres \
    -e POSTGRES_DB=ny_taxi \
    -v c:/Users/luisi/Documents/zoomcamp/ZoomcampDE/1_docker_terraform/2_docker_sql/ny_taxi_postgres_data:/var/lib/postgresql/data \
    -p 5431:5432 \
    postgres:13

=====================================================

#accessing database via pgadmin

[if needed] pip install pgcli

pgcli -h localhost -p 5431 -u postgres -d ny_taxi
=============================================================

#creating a network
docker creat network pg-network
===============================================

#starting the database container in the network
docker run -it \
    -e POSTRGES_USER=postgres \
    -e POSTGRES_PASSWORD=postgres \
    -e POSTGRES_DB=ny_taxi \
    -v c:/Users/luisi/Documents/zoomcamp/ZoomcampDE/1_docker_terraform/2_docker_sql/ny_taxi_postgres_data:/var/lib/postgresql/data \
    -p 5431:5432 \ 
    --network pg-network \  
    --name pg-database \
    postgres:13

docker run -it -e POSTRGES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=ny_taxi -v c:/Users/luisi/Documents/zoomcamp/ZoomcampDE/1_docker_terraform/2_docker_sql/ny_taxi_postgres_data:/var/lib/postgresql/data -p 5431:5432 --network pg-network --name pg-database postgres:13
================================================================

# iniciando o container pgadmin
docker run -it \
    -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
    -e PGADMIN_DEFAULT_PASSWORD="admin" \
    -p 8080:80 \
    --network pg-network \
    --name pgadmin \
    dpage/pgadmin4

=====================================================================

#rodando o arquivo python localmente
python ingesting_yellow_taxi_data.py \
    --user=postgres \
    --password=postgres \
    --host=localhost \
    --port=5431 \
    --database=ny_taxi \
    --tablename=yellow_taxi_data \
    --url=https://github.com/DataTalksClub/nyc-tlc-data/releases/download/yellow/yellow_tripdata_2021-01.csv.gz
====================================================

#rodando o arquivo python no container

docker build -t taxi_ingest:v001 . [criar o container]


docker run -it \
    --network pg-network \
    taxi_ingest:v001 \
        --user=postgres \
        --password=postgres \
        --host=pg-database \
        --port=5432 \
        --database=ny_taxi \
        --tablename=yellow_taxi_data \
        --url=https://github.com/DataTalksClub/nyc-tlc-data/releases/download/yellow/yellow_tripdata_2021-01.csv.gz

===============================================================
#rodando o arquivo python na network
docker run -it \
    --network 2_docker_sql_default \
    taxi_ingest:v001 \
        --user=postgres \
        --password=postgres \
        --host=pgdatabase \
        --port=5432 \
        --database=ny_taxi \
        --tablename=yellow_taxi_data \
        --url=https://github.com/DataTalksClub/nyc-tlc-data/releases/download/yellow/yellow_tripdata_2021-01.csv.gz

=====================================================================
#rodando um container pgcli que acessa o database na network do docker-compose

docker pull dencold/pgcli

docker run -it --rm \
    --network 2_docker_sql_default \
    -e DB_URL=postgresql://postgres:postgres@pgdatabase:5432/ny_taxi \
    dencold/pgcli

!!!! é possivel conectar o pgcli no container do postgres usando a forma padrão !!!!

pgcli -h localhost -p 5431 -u postgres -d ny_taxi  [! ateção à porta que foi usada no docker-compose.yaml !]

================================================================================


docker run -it \
    taxi_ingest:v001 \
        --user=postgres \
        --password=postgres \
        --host=localhost \
        --port=5432 \
        --database=ny_taxi \
        --tablename=yellow_taxi_data \
        --url=https://github.com/DataTalksClub/nyc-tlc-data/releases/download/yellow/yellow_tripdata_2021-01.csv.gz

=======================================================================================
#starting docker from bash

docker desktop start

============================================================================================
#runing multiple containers

$ docker-compose -f docker-compose_kestra.yaml -f docker-compose_postgres.yaml up -d
